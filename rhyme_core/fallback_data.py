"""Deterministic fallback results used when the SQLite index is unavailable."""
from __future__ import annotations

import re
import unicodedata

from typing import Dict, Iterable, List, Sequence, Tuple

# Helper to build canonical fallback entries.
def _entry(word: str,
          rhyme_type: str,
          syllables: int,
          *,
          is_multiword: bool | None = None,
          score: float | None = None) -> Dict[str, object]:
    word = word.strip()
    if is_multiword is None:
        is_multiword = (" " in word) or ("-" in word)
    base = {
        "perfect": 1.0,
        "assonant": 0.86,
        "slant": 0.75,
        "consonant": 0.70,
    }.get(rhyme_type, 0.65)
    score = score if score is not None else round(base * 0.9, 6)
    return {
        "word": word,
        "rhyme_type": rhyme_type,
        "score": float(score),
        "is_multiword": bool(is_multiword),
        "syllables": int(syllables),
    }

_CLEAN_RE = re.compile(r"[^a-z0-9']+")

def _clean_key(text: str) -> str:
    normalized = unicodedata.normalize("NFKD", text or "")
    ascii_text = normalized.encode("ascii", "ignore").decode("ascii")
    return _CLEAN_RE.sub("", ascii_text.lower())

# Define raw fallback templates: mapping query key -> sequence of (word, type, syllables).
_RAW_RESULTS: Dict[str, Sequence[Tuple[str, str, int]]] = {
    "hat": [
        ("cat", "perfect", 1),
        ("bat", "perfect", 1),
        ("mat", "perfect", 1),
        ("flat", "perfect", 1),
        ("gnat", "assonant", 1),
        ("chat", "perfect", 1),
        ("splat", "perfect", 1),
        ("that", "perfect", 1),
        ("top hat", "slant", 2),
        ("hard hat", "slant", 2),
        ("combat", "slant", 2),
        ("diplomat", "slant", 3),
    ],
    "downside": [
        ("blindside", "perfect", 2),
        ("inside", "perfect", 2),
        ("landslide", "assonant", 2),
        ("outside", "assonant", 2),
        ("curbside", "slant", 2),
        ("hillside", "perfect", 2),
        ("bayside", "perfect", 2),
        ("stateside", "perfect", 2),
        ("seaside", "assonant", 2),
        ("fireside", "assonant", 2),
        ("underside", "slant", 3),
        ("nationwide", "slant", 3),
    ],
    "double": [
        ("trouble", "perfect", 2),
        ("stubble", "perfect", 2),
        ("bubble", "perfect", 2),
        ("rubble", "perfect", 2),
        ("hubble", "perfect", 2),
        ("shuffle", "slant", 2),
        ("duffel", "slant", 2),
        ("couple", "assonant", 2),
        ("tunnel", "slant", 2),
        ("puddle", "slant", 2),
        ("subtle", "consonant", 2),
        ("double play", "slant", 3),
    ],
    "rhythm": [
        ("algorithm", "slant", 3),
        ("prism", "slant", 2),
        ("schism", "slant", 2),
        ("criticism", "slant", 4),
        ("aphorism", "slant", 4),
        ("baptism", "slant", 2),
        ("organism", "slant", 4),
        ("magnetism", "slant", 4),
        ("heroism", "slant", 4),
        ("catechism", "slant", 4),
        ("embolism", "slant", 4),
        ("mechanism", "slant", 4),
    ],
    "orange": [
        ("door hinge", "slant", 2),
        ("foreign", "slant", 2),
        ("sporange", "perfect", 2),
        ("porridge", "slant", 2),
        ("storage", "slant", 2),
        ("melange", "slant", 2),
        ("four-inch", "slant", 2),
    ],
    "queue": [
        ("cue", "perfect", 1),
        ("due", "perfect", 1),
        ("you", "perfect", 1),
        ("few", "assonant", 1),
        ("chew", "perfect", 1),
        ("through", "assonant", 1),
        ("blue", "assonant", 1),
        ("renew", "assonant", 2),
        ("askew", "slant", 2),
        ("barbecue", "slant", 3),
    ],
    "chandelier": [
        ("volunteer", "perfect", 3),
        ("pioneer", "perfect", 3),
        ("musketeer", "perfect", 3),
        ("engineer", "perfect", 3),
        ("chevalier", "slant", 3),
        ("mountaineer", "perfect", 3),
        ("privateer", "perfect", 3),
        ("grenadier", "perfect", 3),
        ("auctioneer", "perfect", 3),
        ("bandolier", "slant", 3),
    ],
    "barbecue": [
        ("curlicue", "assonant", 3),
        ("thank you", "slant", 2),
        ("residue", "slant", 3),
        ("fondue", "assonant", 2),
        ("debut", "assonant", 2),
        ("avenue", "assonant", 3),
        ("milieu", "assonant", 2),
        ("argue", "slant", 2),
        ("subdue", "assonant", 2),
        ("value", "slant", 2),
    ],
    "onomatopoeia": [
        ("panacea", "assonant", 4),
        ("diarrhea", "assonant", 4),
        ("cassiopeia", "assonant", 5),
        ("galilea", "assonant", 4),
        ("freesia", "slant", 3),
        ("pizzeria", "slant", 4),
        ("amnesia", "slant", 4),
        ("encyclopedia", "slant", 6),
    ],
    "cafelatte": [
        ("matte", "assonant", 1),
        ("sachet", "assonant", 2),
        ("karate", "slant", 3),
        ("pinata", "slant", 3),
        ("bachata", "slant", 3),
        ("regatta", "slant", 3),
        ("hey latte", "slant", 3),
        ("dulce latte", "slant", 4),
    ],
    "machinelearning": [
        ("discerning", "perfect", 3),
        ("returning", "perfect", 3),
        ("earning", "perfect", 2),
        ("yearning", "perfect", 2),
        ("concerning", "perfect", 3),
        ("churn in", "slant", 2),
        ("adjourn in", "slant", 3),
        ("life-long learning", "slant", 4),
    ],
    "throughtime": [
        ("true crime", "perfect", 2),
        ("new rhyme", "perfect", 2),
        ("blue line", "assonant", 2),
        ("crew time", "perfect", 2),
        ("through rhyme", "perfect", 2),
        ("moonshine", "slant", 2),
    ],
    "choir": [
        ("fire", "perfect", 1),
        ("liar", "perfect", 2),
        ("wire", "perfect", 1),
        ("squire", "assonant", 1),
        ("supplier", "slant", 3),
        ("entire", "slant", 2),
    ],
    "rough": [
        ("tough", "perfect", 1),
        ("enough", "perfect", 2),
        ("stuff", "perfect", 1),
        ("snuff", "perfect", 1),
        ("scruff", "perfect", 1),
        ("gruff", "perfect", 1),
        ("rough up", "slant", 2),
        ("love", "assonant", 1),
    ],
    "beatit": [
        ("eat it", "perfect", 2),
        ("read it", "perfect", 2),
        ("defeat it", "perfect", 3),
        ("repeat it", "perfect", 3),
        ("complete it", "perfect", 3),
        ("treat it", "perfect", 2),
        ("seat it", "perfect", 2),
        ("sweet it", "slant", 2),
    ],
    "sister": [
        ("blister", "perfect", 2),
        ("twister", "perfect", 2),
        ("mister", "perfect", 2),
        ("lister", "perfect", 2),
        ("resister", "perfect", 3),
        ("resistor", "slant", 3),
        ("persister", "perfect", 3),
        ("transistor", "slant", 3),
        ("soul sister", "slant", 3),
        ("little sister", "slant", 4),
        ("big sister", "slant", 3),
        ("kid sister", "slant", 3),
        ("stepsister", "perfect", 3),
        ("half-sister", "slant", 3),
        ("sisters", "perfect", 2),
        ("spinster", "slant", 2),
        ("hipster", "slant", 2),
        ("song thrister", "slant", 3),
        ("sisterhood", "slant", 3),
        ("barista", "assonant", 3),
        ("ballista", "assonant", 3),
        ("vista", "assonant", 2),
        ("trister", "perfect", 2),
        ("armourer", "slant", 3),
        ("minister", "perfect", 3),
        ("sinister", "perfect", 3),
        ("administer", "perfect", 4),
        ("register", "perfect", 3),
        ("roadster", "slant", 2),
        ("songster", "slant", 2),
        ("teamster", "slant", 2),
        ("young sister", "slant", 3),
        ("elder sister", "slant", 4),
        ("earth blister", "slant", 3),
        ("assist her", "assonant", 3),
        ("insist her", "slant", 3),
    ],
    "rhyme": [
        ("time", "perfect", 1),
        ("chime", "perfect", 1),
        ("climb", "assonant", 1),
        ("crime", "perfect", 1),
        ("dime", "perfect", 1),
        ("grime", "perfect", 1),
        ("prime", "perfect", 1),
        ("slime", "perfect", 1),
        ("sublime", "perfect", 2),
        ("lifetime", "assonant", 2),
        ("overtime", "assonant", 3),
        ("springtime", "assonant", 2),
        ("centime", "slant", 2),
        ("enzyme", "slant", 2),
        ("meantime", "assonant", 2),
        ("airtime", "assonant", 2),
        ("wartime", "assonant", 2),
        ("bedtime", "assonant", 2),
        ("lunchtime", "assonant", 2),
        ("primetime", "assonant", 2),
        ("hard time", "assonant", 2),
        ("downtime", "assonant", 2),
        ("nickel-and-dime", "slant", 3),
        ("story time", "assonant", 2),
        ("good time", "assonant", 2),
        ("two-time", "assonant", 2),
        ("nighttime", "assonant", 2),
        ("sometime", "assonant", 2),
        ("schooltime", "assonant", 2),
        ("rhymes", "perfect", 1),
        ("airline", "slant", 2),
        ("headline", "slant", 2),
        ("guideline", "slant", 2),
        ("deadline", "slant", 2),
        ("underline", "slant", 3),
    ],
    "time": [
        ("rhyme", "perfect", 1),
        ("chime", "perfect", 1),
        ("climb", "assonant", 1),
        ("crime", "perfect", 1),
        ("dime", "perfect", 1),
        ("prime", "perfect", 1),
        ("slime", "perfect", 1),
        ("sublime", "perfect", 2),
        ("lifetime", "assonant", 2),
        ("overtime", "assonant", 3),
        ("springtime", "assonant", 2),
        ("meantime", "assonant", 2),
        ("airtime", "assonant", 2),
        ("wartime", "assonant", 2),
        ("bedtime", "assonant", 2),
        ("lunchtime", "assonant", 2),
        ("primetime", "assonant", 2),
        ("hard time", "assonant", 2),
        ("downtime", "assonant", 2),
        ("good time", "assonant", 2),
        ("story time", "assonant", 2),
        ("nighttime", "assonant", 2),
        ("sometime", "assonant", 2),
        ("schooltime", "assonant", 2),
        ("nickel-and-dime", "slant", 3),
        ("guideline", "slant", 2),
        ("headline", "slant", 2),
        ("deadline", "slant", 2),
        ("baseline", "slant", 2),
        ("underline", "slant", 3),
        ("enzyme", "slant", 2),
        ("sometime soon", "slant", 3),
        ("one time", "assonant", 2),
        ("longtime", "assonant", 2),
        ("two-time", "assonant", 2),
    ],
    "music": [
        ("acoustic", "assonant", 3),
        ("new music", "perfect", 3),
        ("true music", "perfect", 3),
        ("blue music", "perfect", 3),
        ("groove music", "perfect", 3),
        ("muse sick", "slant", 2),
        ("use it", "slant", 2),
        ("fuse it", "slant", 2),
        ("choose it", "slant", 2),
        ("refuse it", "slant", 3),
        ("amuse it", "slant", 3),
        ("abuse it", "slant", 3),
        ("enthuse it", "slant", 3),
        ("infuse it", "slant", 3),
        ("play music", "perfect", 3),
        ("soul music", "perfect", 3),
        ("whole music", "slant", 3),
        ("slow music", "slant", 3),
        ("folk music", "perfect", 3),
        ("jazz music", "perfect", 3),
        ("dance music", "perfect", 3),
        ("house music", "perfect", 3),
    ],
    "again": [
        ("amen", "assonant", 2),
        ("domain", "assonant", 2),
        ("remain", "assonant", 2),
        ("sustain", "assonant", 2),
        ("terrain", "assonant", 2),
        ("campaign", "assonant", 2),
        ("contain", "assonant", 2),
        ("obtain", "assonant", 2),
        ("complain", "assonant", 2),
        ("explain", "assonant", 2),
        ("regain", "assonant", 2),
        ("refrain", "assonant", 2),
        ("train", "assonant", 1),
        ("grain", "assonant", 1),
        ("chain", "assonant", 1),
        ("plane", "assonant", 1),
        ("lane", "assonant", 1),
        ("vein", "assonant", 1),
        ("main", "assonant", 1),
        ("insane", "slant", 2),
        ("arcane", "slant", 2),
        ("hurricane", "slant", 3),
        ("porcelain", "slant", 3),
    ],
    "window": [
        ("thin-blow", "perfect", 2),
        ("endo", "slant", 2),
    ],
}

FALLBACK_FLAT_RESULTS: Dict[str, List[Dict[str, object]]] = {
    key: [_entry(w, t, s) for (w, t, s) in entries]
    for key, entries in _RAW_RESULTS.items()
}
# Minimal pronunciations so search_word(..., include_pron=True) can attach lists.
_RAW_PRONS = [
    ("hat", ["HH", "AE1", "T"]),
    ("cat", ["K", "AE1", "T"]),
    ("bat", ["B", "AE1", "T"]),
    ("mat", ["M", "AE1", "T"]),
    ("flat", ["F", "L", "AE1", "T"]),
    ("gnat", ["N", "AE1", "T"]),
    ("chat", ["CH", "AE1", "T"]),
    ("splat", ["S", "P", "L", "AE1", "T"]),
    ("that", ["DH", "AE1", "T"]),
    ("blindside", ["B", "L", "AY1", "N", "D", "S", "AY2", "D"]),
    ("inside", ["IH2", "N", "S", "AY1", "D"]),
    ("trouble", ["T", "R", "AH1", "B", "AH0", "L"]),
    ("bubble", ["B", "AH1", "B", "AH0", "L"]),
    ("algorithm", ["AE1", "L", "G", "ER0", "IH2", "DH", "AH0", "M"]),
    ("door hinge", ["D", "AO1", "R", "HH", "IH1", "N", "JH"]),
    ("foreign", ["F", "AO1", "R", "IH0", "N"]),
    ("cue", ["K", "Y", "UW1"]),
    ("queue", ["K", "Y", "UW1"]),
    ("volunteer", ["V", "AA2", "L", "AH0", "N", "T", "IH1", "R"]),
    ("curlicue", ["K", "ER1", "L", "IY0", "K", "Y", "UW2"]),
    ("panacea", ["P", "AE2", "N", "AH0", "S", "IY1", "AH0"]),
    ("diarrhea", ["D", "AY2", "ER0", "IY1", "AH0"]),
    ("cafe latte", ["K", "AE1", "F", "EY1", "L", "AA1", "T", "EY0"]),
    ("matte", ["M", "AE1", "T"]),
    ("sachet", ["S", "AE0", "SH", "EY1"]),
    ("karate", ["K", "ER0", "AA1", "T", "IY0"]),
    ("discerning", ["D", "IH0", "S", "ER1", "N", "IH0", "NG"]),
    ("returning", ["R", "IH0", "T", "ER1", "N", "IH0", "NG"]),
    ("earning", ["ER1", "N", "IH0", "NG"]),
    ("true crime", ["T", "R", "UW1", "K", "R", "AY1", "M"]),
    ("new rhyme", ["N", "UW1", "R", "AY1", "M"]),
    ("blue line", ["B", "L", "UW1", "L", "AY1", "N"]),
    ("fire", ["F", "AY1", "ER0"]),
    ("liar", ["L", "AY1", "ER0"]),
    ("wire", ["W", "AY1", "ER0"]),
    ("tough", ["T", "AH1", "F"]),
    ("enough", ["IH0", "N", "AH1", "F"]),
    ("beat it", ["B", "IY1", "T", "IH0", "T"]),
    ("eat it", ["IY1", "T", "IH0", "T"]),
    ("read it", ["R", "IY1", "D", "IH0", "T"]),
    ("defeat it", ["D", "IH0", "F", "IY1", "T", "IH0", "T"]),
    ("sister", ["S", "IH1", "S", "T", "ER0"]),
    ("blister", ["B", "L", "IH1", "S", "T", "ER0"]),
    ("twister", ["T", "W", "IH1", "S", "T", "ER0"]),
    ("mister", ["M", "IH1", "S", "T", "ER0"]),
    ("rhyme", ["R", "AY1", "M"]),
    ("time", ["T", "AY1", "M"]),
    ("music", ["M", "Y", "UW1", "Z", "IH0", "K"]),
    ("again", ["AH0", "G", "EH1", "N"]),
    ("window", ["W", "IH1", "N", "D", "OW0"]),
    ("thin-blow", ["TH", "IH1", "N", "B", "L", "OW0"]),
]

FALLBACK_PRONS: Dict[str, List[str]] = {}
for word, pron in _RAW_PRONS:
    FALLBACK_PRONS[_clean_key(word)] = pron


def fallback_key(word: str) -> str:
    """Return the canonical lookup key used for fallback dictionaries."""
    return _clean_key(word)


def get_fallback_results(word: str) -> List[Dict[str, object]]:
    """Return a copy of the canned fallback rows for ``word`` (may be empty)."""
    key = fallback_key(word)
    if not key:
        return []
    return [dict(item) for item in FALLBACK_FLAT_RESULTS.get(key, ())]


def get_fallback_pron(word: str) -> List[str] | None:
    """Return a pronunciation token list for ``word`` if available."""
    pron = FALLBACK_PRONS.get(fallback_key(word))
    return list(pron) if pron else None


__all__ = [
    "FALLBACK_FLAT_RESULTS",
    "FALLBACK_PRONS",
    "fallback_key",
    "get_fallback_pron",
    "get_fallback_results",
]
